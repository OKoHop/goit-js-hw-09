{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAMtC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAACN,WAAUC,UAEnBM,EAAO,CAACP,WAAUC,S,GAErBA,E,IAZLT,EAAKC,KAAKgB,iBAAiB,UAgB3B,SAAoBC,GAClBA,EAAIC,iBAKJ,IAJA,IAAIC,EAASC,SAASrB,EAAKI,WAAWkB,OAChCC,EAAQC,OAAOxB,EAAKK,UAAUiB,OAC9BG,EAAUD,OAAOxB,EAAKM,YAAYgB,OAE/BI,EAAI,EAAGA,GAAKD,EAASC,IAC5BnB,EAAcmB,EAAGN,GACdO,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAAcX,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAC3FuB,OAAI,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAAcX,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAC9FW,GAAUG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('[name=\"delay\"]'),\n  inputStep: document.querySelector('[name=\"step\"]'),\n  inputAmount: document.querySelector('[name=\"amount\"]'),\n}\nconst dataObj = {};\nrefs.form.addEventListener('submit', runPromise);\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay})\n  } else {\n        reject({position, delay})\n  }\n  }, delay)\n    }) \n}\n\nfunction runPromise(evt) {\n  evt.preventDefault();\n  let iDelay = parseInt(refs.inputDelay.value);\n  const iStep = Number(refs.inputStep.value);\n  const iAmount = Number(refs.inputAmount.value);\n\n  for (let i = 1; i <= iAmount; i++) {\n    createPromise(i, iDelay)\n      .then(({ position, delay }) => { Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`) })\n      .catch(({ position, delay }) => { Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`) });\n    iDelay += iStep;\n  }\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","iDelay","parseInt","value","iStep","Number","iAmount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.a81dc9da.js.map"}