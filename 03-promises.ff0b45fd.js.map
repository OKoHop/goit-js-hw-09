{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAMtC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAACN,E,MAAUC,IAEnBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAE5BA,EAAM,G,CAZXT,EAAKC,KAAKgB,iBAAiB,UAgB3B,SAAoBC,GAClBA,EAAIC,iBACJ,IAAIC,EAASC,SAASrB,EAAKI,WAAWkB,OACtC,MAAMC,EAAQC,OAAOxB,EAAKK,UAAUiB,OAC9BG,EAAUD,OAAOxB,EAAKM,YAAYgB,OAExC,IAAK,IAAII,EAAI,EAAGA,GAAKD,EAASC,IAC5BnB,EAAcmB,EAAGN,GACdO,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MAAcX,EAAA8B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAC7FqB,OAAI,EAACtB,SAAEA,EAAQC,MAAEA,MAAcX,EAAA8B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,IAChGW,GAAUG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  inputDelay: document.querySelector('[name=\"delay\"]'),\n  inputStep: document.querySelector('[name=\"step\"]'),\n  inputAmount: document.querySelector('[name=\"amount\"]'),\n}\nconst dataObj = {};\nrefs.form.addEventListener('submit', runPromise);\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay})\n  } else {\n        reject({position, delay})\n  }\n  }, delay)\n    }) \n}\n\nfunction runPromise(evt) {\n  evt.preventDefault();\n  let iDelay = parseInt(refs.inputDelay.value);\n  const iStep = Number(refs.inputStep.value);\n  const iAmount = Number(refs.inputAmount.value);\n\n  for (let i = 1; i <= iAmount; i++) {\n    createPromise(i, iDelay)\n      .then(({ position, delay }) => { Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`) })\n      .catch(({ position, delay }) => { Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`) });\n    iDelay += iStep;\n  }\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","inputDelay","inputStep","inputAmount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","iDelay","parseInt","value","iStep","Number","iAmount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.ff0b45fd.js.map"}